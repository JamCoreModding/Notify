//file:noinspection GroovyUnusedAssignment
plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower-mini' version '1.1.0'
    id 'org.cadixdev.licenser' version '0.6.1'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url 'https://maven.terraformersmc.com/releases'
    }

    maven {
        url 'https://jitpack.io'
    }

    maven {
        url "https://maven.shedaniel.me/"
    }
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    minecraft('com.mojang:minecraft:' + project.property('minecraft_version'))
    mappings('net.fabricmc:yarn:' + project.property('yarn_mappings') + ':v2')
    modImplementation('net.fabricmc:fabric-loader:' + project.property('loader_version'))

    modImplementation('net.fabricmc.fabric-api:fabric-api:' + project.property('fabric_api_version'))
    modImplementation('com.terraformersmc:modmenu:' + project.property('mod_menu_version'))

    include(modImplementation('com.github.alkyaly:enum-extender-3000:' + project.property('enum_extender_version')))

    modApi('me.shedaniel.cloth:cloth-config-fabric:' + project.property('cloth_config_version')) {
        exclude(group: 'net.fabricmc.fabric-api')
    }
}

test {
    useJUnitPlatform()
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

tasks.withType(JavaCompile) {
    licenseFormat
    options.encoding = 'UTF-8'
}

tasks.named('build') {
    dependsOn tasks.updateLicenses
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    from 'LICENSE'
}
